/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package forms;

import forms.administrator.FormNoviAdministrator;
import forms.administrator.FormPretragaAdministratora;
import forms.organizacija.FormNovaOrganizacija;
import forms.organizacija.FormPretragaOrganizacije;
import static com.sun.org.apache.xalan.internal.lib.ExsltDatetime.date;
import controller.ClientController;
import domain.Administrator;
import domain.Organizacija;
import domain.Racun;
import domain.Vozilo;
import forms.administrator.FormDetaljiAdministratora;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.net.URL;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.Timer;
import javax.swing.table.TableModel;
import models.TableModelRacuni;
import session.Session;

/**
 *
 * @author 38160
 */
public class MainForm extends javax.swing.JFrame {

    Timer timer;
    private int brojSlobodnohMesta;

    /**
     * Creates new form MainForm
     */
    public MainForm() {
        initComponents();

        inicijalizacijaPocetnihVrednosti();

        postavljanjeLogoa();

        sat();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblUlogovani = new javax.swing.JLabel();
        txtDanasnjiDatum = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        cmbOrganizacija = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        txtBrojMesta = new javax.swing.JFormattedTextField();
        txtIznosBezPopusta = new javax.swing.JFormattedTextField();
        txtPopust = new javax.swing.JFormattedTextField();
        txtIznosSaPopustom = new javax.swing.JFormattedTextField();
        btnKreiraj = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        txtPretraga = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblRacuni = new javax.swing.JTable();
        lblImage = new javax.swing.JLabel();
        lblSat = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        menuOrganizacija = new javax.swing.JMenu();
        menuPretragaOrganizacija = new javax.swing.JMenuItem();
        menuNovaOrganizacija = new javax.swing.JMenuItem();
        menuAdministrator = new javax.swing.JMenu();
        menuPretragaAdministratora = new javax.swing.JMenuItem();
        menuNoviAdministrator = new javax.swing.JMenuItem();
        menuLogovanje = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Glavna forma");
        setResizable(false);

        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        lblUlogovani.setText("Ulogovani");
        lblUlogovani.setMaximumSize(new java.awt.Dimension(500, 14));
        lblUlogovani.setMinimumSize(new java.awt.Dimension(100, 14));
        lblUlogovani.setPreferredSize(new java.awt.Dimension(414, 14));

        txtDanasnjiDatum.setMaximumSize(new java.awt.Dimension(400, 25));
        txtDanasnjiDatum.setMinimumSize(new java.awt.Dimension(100, 25));
        txtDanasnjiDatum.setPreferredSize(new java.awt.Dimension(300, 25));

        jLabel5.setText("Popust (%):");
        jLabel5.setMaximumSize(new java.awt.Dimension(200, 14));
        jLabel5.setMinimumSize(new java.awt.Dimension(50, 14));
        jLabel5.setPreferredSize(new java.awt.Dimension(110, 14));

        jLabel4.setText("Iznos bez popusta:");
        jLabel4.setMaximumSize(new java.awt.Dimension(200, 14));
        jLabel4.setMinimumSize(new java.awt.Dimension(50, 14));
        jLabel4.setPreferredSize(new java.awt.Dimension(110, 14));

        jLabel3.setText("Broj mesta:");
        jLabel3.setMaximumSize(new java.awt.Dimension(200, 14));
        jLabel3.setMinimumSize(new java.awt.Dimension(50, 14));
        jLabel3.setPreferredSize(new java.awt.Dimension(110, 14));

        jLabel2.setText("Organizacija:");
        jLabel2.setMaximumSize(new java.awt.Dimension(200, 14));
        jLabel2.setMinimumSize(new java.awt.Dimension(50, 14));
        jLabel2.setPreferredSize(new java.awt.Dimension(110, 14));

        cmbOrganizacija.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbOrganizacija.setMaximumSize(new java.awt.Dimension(400, 25));
        cmbOrganizacija.setMinimumSize(new java.awt.Dimension(100, 25));
        cmbOrganizacija.setPreferredSize(new java.awt.Dimension(300, 25));
        cmbOrganizacija.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbOrganizacijaItemStateChanged(evt);
            }
        });
        cmbOrganizacija.addMouseWheelListener(new java.awt.event.MouseWheelListener() {
            public void mouseWheelMoved(java.awt.event.MouseWheelEvent evt) {
                cmbOrganizacijaMouseWheelMoved(evt);
            }
        });
        cmbOrganizacija.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cmbOrganizacijaKeyPressed(evt);
            }
        });

        jLabel6.setText("Iznos sa popustom:");
        jLabel6.setMaximumSize(new java.awt.Dimension(200, 14));
        jLabel6.setMinimumSize(new java.awt.Dimension(50, 14));
        jLabel6.setPreferredSize(new java.awt.Dimension(110, 14));

        jLabel1.setText("Danasnji datum:");
        jLabel1.setMaximumSize(new java.awt.Dimension(200, 14));
        jLabel1.setMinimumSize(new java.awt.Dimension(50, 14));
        jLabel1.setPreferredSize(new java.awt.Dimension(110, 14));

        txtBrojMesta.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        txtBrojMesta.setMaximumSize(new java.awt.Dimension(400, 25));
        txtBrojMesta.setMinimumSize(new java.awt.Dimension(100, 25));
        txtBrojMesta.setPreferredSize(new java.awt.Dimension(300, 25));

        txtIznosBezPopusta.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));
        txtIznosBezPopusta.setMaximumSize(new java.awt.Dimension(400, 25));
        txtIznosBezPopusta.setMinimumSize(new java.awt.Dimension(100, 25));
        txtIznosBezPopusta.setPreferredSize(new java.awt.Dimension(300, 25));

        txtPopust.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));
        txtPopust.setMaximumSize(new java.awt.Dimension(400, 25));
        txtPopust.setMinimumSize(new java.awt.Dimension(100, 25));
        txtPopust.setPreferredSize(new java.awt.Dimension(300, 25));
        txtPopust.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtPopustFocusGained(evt);
            }
        });
        txtPopust.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPopustKeyPressed(evt);
            }
        });

        txtIznosSaPopustom.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));
        txtIznosSaPopustom.setMaximumSize(new java.awt.Dimension(400, 25));
        txtIznosSaPopustom.setMinimumSize(new java.awt.Dimension(100, 25));
        txtIznosSaPopustom.setPreferredSize(new java.awt.Dimension(300, 25));

        btnKreiraj.setText("Kreiraj racun");
        btnKreiraj.setMaximumSize(new java.awt.Dimension(300, 30));
        btnKreiraj.setMinimumSize(new java.awt.Dimension(100, 30));
        btnKreiraj.setPreferredSize(new java.awt.Dimension(200, 30));
        btnKreiraj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKreirajActionPerformed(evt);
            }
        });
        btnKreiraj.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnKreirajKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(22, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(btnKreiraj, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cmbOrganizacija, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtDanasnjiDatum, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtBrojMesta, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtIznosBezPopusta, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtPopust, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtIznosSaPopustom, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(lblUlogovani, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(22, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(lblUlogovani, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDanasnjiDatum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbOrganizacija, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtBrojMesta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtIznosBezPopusta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPopust, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtIznosSaPopustom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addComponent(btnKreiraj, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(22, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel8.setText("Svi racuni:");
        jLabel8.setMaximumSize(new java.awt.Dimension(1000, 20));
        jLabel8.setMinimumSize(new java.awt.Dimension(500, 20));
        jLabel8.setPreferredSize(new java.awt.Dimension(900, 20));

        txtPretraga.setMaximumSize(new java.awt.Dimension(500, 25));
        txtPretraga.setMinimumSize(new java.awt.Dimension(100, 25));
        txtPretraga.setPreferredSize(new java.awt.Dimension(300, 25));
        txtPretraga.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtPretragaFocusGained(evt);
            }
        });
        txtPretraga.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPretragaActionPerformed(evt);
            }
        });
        txtPretraga.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPretragaKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPretragaKeyReleased(evt);
            }
        });

        jLabel7.setText("Pretraga racuna:");
        jLabel7.setMaximumSize(new java.awt.Dimension(200, 14));
        jLabel7.setMinimumSize(new java.awt.Dimension(50, 14));
        jLabel7.setPreferredSize(new java.awt.Dimension(110, 14));

        tblRacuni.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblRacuni.setMaximumSize(new java.awt.Dimension(1000, 300));
        tblRacuni.setMinimumSize(new java.awt.Dimension(500, 100));
        tblRacuni.setPreferredSize(new java.awt.Dimension(900, 200));
        tblRacuni.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tblRacuniFocusGained(evt);
            }
        });
        tblRacuni.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tblRacuniKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(tblRacuni);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(22, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtPretraga, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 903, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(22, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(22, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPretraga, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(22, Short.MAX_VALUE))
        );

        lblImage.setForeground(new java.awt.Color(204, 204, 204));
        lblImage.setText("Slika");
        lblImage.setMaximumSize(new java.awt.Dimension(700, 600));
        lblImage.setMinimumSize(new java.awt.Dimension(200, 100));
        lblImage.setPreferredSize(new java.awt.Dimension(479, 284));

        lblSat.setText("Sat");
        lblSat.setMaximumSize(new java.awt.Dimension(479, 14));
        lblSat.setMinimumSize(new java.awt.Dimension(479, 14));
        lblSat.setPreferredSize(new java.awt.Dimension(479, 14));

        menuOrganizacija.setText("Organizacija");
        menuOrganizacija.setMaximumSize(new java.awt.Dimension(140, 20));
        menuOrganizacija.setMinimumSize(new java.awt.Dimension(50, 20));
        menuOrganizacija.setPreferredSize(new java.awt.Dimension(70, 20));
        menuOrganizacija.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                menuOrganizacijaKeyPressed(evt);
            }
        });

        menuPretragaOrganizacija.setText("Pretraga organizacija");
        menuPretragaOrganizacija.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuPretragaOrganizacijaActionPerformed(evt);
            }
        });
        menuOrganizacija.add(menuPretragaOrganizacija);

        menuNovaOrganizacija.setText("Nova organizacija");
        menuNovaOrganizacija.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuNovaOrganizacijaActionPerformed(evt);
            }
        });
        menuOrganizacija.add(menuNovaOrganizacija);

        jMenuBar1.add(menuOrganizacija);

        menuAdministrator.setText("Administrator");
        menuAdministrator.setMaximumSize(new java.awt.Dimension(140, 20));
        menuAdministrator.setMinimumSize(new java.awt.Dimension(50, 20));
        menuAdministrator.setPreferredSize(new java.awt.Dimension(70, 20));

        menuPretragaAdministratora.setText("Pretraga administratora");
        menuPretragaAdministratora.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuPretragaAdministratoraActionPerformed(evt);
            }
        });
        menuAdministrator.add(menuPretragaAdministratora);

        menuNoviAdministrator.setText("Novi administrator");
        menuNoviAdministrator.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuNoviAdministratorActionPerformed(evt);
            }
        });
        menuAdministrator.add(menuNoviAdministrator);

        menuLogovanje.setText(" Odjava");
        menuLogovanje.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuLogovanjeActionPerformed(evt);
            }
        });
        menuAdministrator.add(menuLogovanje);

        jMenuBar1.add(menuAdministrator);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(11, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblImage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblSat, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblSat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblImage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void menuNoviAdministratorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuNoviAdministratorActionPerformed
        dodajNovogAdministratora();
    }//GEN-LAST:event_menuNoviAdministratorActionPerformed

    private void menuPretragaAdministratoraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuPretragaAdministratoraActionPerformed
        pretragaAdministratora();
    }//GEN-LAST:event_menuPretragaAdministratoraActionPerformed

    private void menuNovaOrganizacijaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuNovaOrganizacijaActionPerformed
        dodajNovuOrganizaciju();
    }//GEN-LAST:event_menuNovaOrganizacijaActionPerformed

    private void menuPretragaOrganizacijaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuPretragaOrganizacijaActionPerformed
        pretragaOrganizacija();
    }//GEN-LAST:event_menuPretragaOrganizacijaActionPerformed

    private void txtPretragaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPretragaKeyReleased
        String param = txtPretraga.getText();
        TableModelRacuni tmr = (TableModelRacuni) tblRacuni.getModel();
        tmr.setParametar(param);
        if (tmr.getRowCount() == 0) {
            JOptionPane.showMessageDialog(rootPane, "Nema racuna za zadati kriterijum!");
            txtPretraga.setText("");
            tmr.setParametar("");
            txtPretraga.requestFocusInWindow();
            txtPretraga.selectAll();
        }
    }//GEN-LAST:event_txtPretragaKeyReleased

    private void btnKreirajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKreirajActionPerformed

        if (!validacija()) {
            return;
        }
        kreirajRacun();
        cmbOrganizacija.requestFocusInWindow();

    }//GEN-LAST:event_btnKreirajActionPerformed

    private void txtPopustKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPopustKeyPressed

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {

            if (txtIznosBezPopusta.getText().isEmpty() && cmbOrganizacija.getItemCount() == 0) {
                JOptionPane.showMessageDialog(rootPane, "Nema organizacija u sistemu!");
                menuNovaOrganizacija.doClick();
                return;
            }
            double iznosBezPopusta = Double.parseDouble(txtIznosBezPopusta.getText());

            if (txtPopust.getText().isEmpty()) {
                JOptionPane.showMessageDialog(rootPane, "Polje popust je obavezno!");
                return;
            }
            double popust = 0;
            try {
                popust = Double.parseDouble(txtPopust.getText()) / 100;
            } catch (Exception ex) {
                if (ex instanceof NumberFormatException) {
                    JOptionPane.showMessageDialog(rootPane, "Polje popust mora biti broj!");
                    Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
                    return;
                }
            }

            double iznosSaPopustom = iznosBezPopusta - iznosBezPopusta * popust;
            txtIznosSaPopustom.setText(String.valueOf(iznosSaPopustom));

            btnKreiraj.requestFocusInWindow();

        }

    }//GEN-LAST:event_txtPopustKeyPressed

    private void cmbOrganizacijaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbOrganizacijaItemStateChanged
        // TODO add your handling code here:
        Organizacija o = (Organizacija) cmbOrganizacija.getSelectedItem();
        if (o == null) {
            return;
        }
        txtBrojMesta.setText(String.valueOf(o.getVozila().size()));
        txtIznosBezPopusta.setText(String.valueOf((double) 500 * Integer.parseInt(txtBrojMesta.getText())));
    }//GEN-LAST:event_cmbOrganizacijaItemStateChanged

    private void cmbOrganizacijaMouseWheelMoved(java.awt.event.MouseWheelEvent evt) {//GEN-FIRST:event_cmbOrganizacijaMouseWheelMoved
        int itemCount = cmbOrganizacija.getItemCount();
        int wheelRotation = evt.getWheelRotation();
        int index = cmbOrganizacija.getSelectedIndex() + wheelRotation;

        if (index >= 0 && index < itemCount) {
            cmbOrganizacija.setSelectedIndex(index);
        } else if (index == -1) {
            cmbOrganizacija.setSelectedIndex(itemCount - 1);
        } else {
            cmbOrganizacija.setSelectedIndex(0);
        }
    }//GEN-LAST:event_cmbOrganizacijaMouseWheelMoved

    private void btnKreirajKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnKreirajKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (!validacija()) {
                return;
            }
            kreirajRacun();
            cmbOrganizacija.requestFocusInWindow();
        }
        if (evt.getKeyCode() == KeyEvent.VK_TAB) {
            txtPretraga.requestFocusInWindow();
        }

    }//GEN-LAST:event_btnKreirajKeyPressed

    private void txtPopustFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPopustFocusGained
        txtPopust.selectAll();
    }//GEN-LAST:event_txtPopustFocusGained

    private void cmbOrganizacijaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cmbOrganizacijaKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txtPopust.requestFocusInWindow();
        }
    }//GEN-LAST:event_cmbOrganizacijaKeyPressed

    private void txtPretragaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPretragaFocusGained
        txtPretraga.selectAll();
    }//GEN-LAST:event_txtPretragaFocusGained

    private void txtPretragaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPretragaKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_TAB || evt.getKeyCode() == KeyEvent.VK_ENTER) {
            tblRacuni.requestFocusInWindow();
        }
    }//GEN-LAST:event_txtPretragaKeyPressed

    private void tblRacuniKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblRacuniKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_TAB) {
            cmbOrganizacija.requestFocusInWindow();
        }
    }//GEN-LAST:event_tblRacuniKeyPressed

    private void menuOrganizacijaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_menuOrganizacijaKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            menuOrganizacija.doClick();
        }
    }//GEN-LAST:event_menuOrganizacijaKeyPressed

    private void menuLogovanjeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuLogovanjeActionPerformed
        logovanje();
    }//GEN-LAST:event_menuLogovanjeActionPerformed

    private void tblRacuniFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tblRacuniFocusGained
        if (tblRacuni.getRowCount() > 0) {
            tblRacuni.setRowSelectionInterval(0, 0);
        }
    }//GEN-LAST:event_tblRacuniFocusGained

    private void txtPretragaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPretragaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPretragaActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnKreiraj;
    private javax.swing.JComboBox<Object> cmbOrganizacija;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblImage;
    private javax.swing.JLabel lblSat;
    private javax.swing.JLabel lblUlogovani;
    private javax.swing.JMenu menuAdministrator;
    private javax.swing.JMenuItem menuLogovanje;
    private javax.swing.JMenuItem menuNovaOrganizacija;
    private javax.swing.JMenuItem menuNoviAdministrator;
    private javax.swing.JMenu menuOrganizacija;
    private javax.swing.JMenuItem menuPretragaAdministratora;
    private javax.swing.JMenuItem menuPretragaOrganizacija;
    private javax.swing.JTable tblRacuni;
    private javax.swing.JFormattedTextField txtBrojMesta;
    private javax.swing.JTextField txtDanasnjiDatum;
    private javax.swing.JFormattedTextField txtIznosBezPopusta;
    private javax.swing.JFormattedTextField txtIznosSaPopustom;
    private javax.swing.JFormattedTextField txtPopust;
    private javax.swing.JTextField txtPretraga;
    // End of variables declaration//GEN-END:variables

    private void popuniOrganizacije() {
        try {
            ArrayList<Organizacija> organizacije = ClientController.getInstance().getAllOrganizacija();
            ArrayList<Vozilo> vozila = ClientController.getInstance().getAllVozilo();

            cmbOrganizacija.removeAllItems();

            for (Organizacija organizacija : organizacije) {
                ArrayList<Vozilo> vozilaOrg = new ArrayList<>();
                for (Vozilo vozilo : vozila) {
                    if (organizacija.getOrganizacijaID().equals(vozilo.getOrganizacija().getOrganizacijaID())) {
                        vozilaOrg.add(vozilo);
                    }
                }
                organizacija.setVozila(vozilaOrg);
                cmbOrganizacija.addItem(organizacija);
            }

        } catch (Exception ex) {
            Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void inicijalizacijaPocetnihVrednosti() {
        Administrator a = Session.getInstance().getTrenutnoUlogovani();
        lblUlogovani.setText("Trenutno ulogovani administrator: " + a.toString() + " (" + a.getParkiraliste().toString() + ")");
        SimpleDateFormat sdf = new SimpleDateFormat("dd.MM.yyyy");
        txtDanasnjiDatum.setText(sdf.format(new Date()));
        popuniOrganizacije();
        txtBrojMesta.setEnabled(false);
        txtDanasnjiDatum.setEnabled(false);
        txtIznosBezPopusta.setEnabled(false);
        txtIznosSaPopustom.setEnabled(false);
        TableModelRacuni model = new TableModelRacuni();
        Thread th = new Thread(model);
        th.start();
        tblRacuni.setModel(model);
        brojSlobodnohMesta = getBrojSlMesta(model.getLista());
        System.out.println("Broj slobodnih mesta nakon logovanja: " + this.getBrojSlobodnohMesta());
    }

    private void postavljanjeLogoa() {
        URL url = MainForm.class.getClassLoader().getResource("images/fon_logo.png");
        ImageIcon iconLogo = new ImageIcon(url);
        lblImage.setIcon(iconLogo);
    }

    private void kreirajRacun() {

        TableModelRacuni model = (TableModelRacuni) tblRacuni.getModel();
        SimpleDateFormat sdf = new SimpleDateFormat("dd.MM.yyyy");

        try {

            Organizacija o = (Organizacija) cmbOrganizacija.getSelectedItem();
            int brojMesta = Integer.parseInt(txtBrojMesta.getText());
            double iznosBezPopusta = Double.parseDouble(txtIznosBezPopusta.getText());
            double popust = Double.parseDouble(txtPopust.getText());
            double iznosSaPopustom = Double.parseDouble(txtIznosSaPopustom.getText());

            Racun r = new Racun(null, new Date(), brojMesta, iznosBezPopusta, popust,
                    iznosSaPopustom, Session.getInstance().getTrenutnoUlogovani(), o);

            ArrayList<Racun> racuni = ClientController.getInstance().getAllRacun();

            String danasnjiDatum = sdf.format(r.getDatum());
            String datumRacuna = "";

            for (Racun racun : racuni) {
                datumRacuna = sdf.format(racun.getDatum());
                if (racun.getOrganizacija().getOrganizacijaID().equals(o.getOrganizacijaID())
                        && datumRacuna.equals(danasnjiDatum)) {
                    JOptionPane.showMessageDialog(this, "Vec postoji rezervacija za ovaj dan za tu organizaciju!");
                    return;
                }
            }

            ClientController.getInstance().addRacun(r);
            model.refreshTable();
            this.setBrojSlobodnohMesta(this.brojSlobodnohMesta - brojMesta);
            System.out.println("Broj slobodnih mesta nakon kreiranja racuna: " + this.getBrojSlobodnohMesta());
            JOptionPane.showMessageDialog(this, "Uspesno kreiran racun!");

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
//            Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private boolean validacijaUnosa() {
        return !(txtBrojMesta.getText().isEmpty() || txtIznosBezPopusta.getText().isEmpty()
                || txtPopust.getText().isEmpty() || txtIznosSaPopustom.getText().isEmpty());
    }

    private boolean validacija() {
        if (!validacijaUnosa()) {
            if (cmbOrganizacija.getItemCount() == 0) {
                JOptionPane.showMessageDialog(this, "Nema organizacija u sistemu!");
                menuNovaOrganizacija.doClick();
                return false;
            }
            JOptionPane.showMessageDialog(this, "Sva polja moraju biti popunjena!");
            txtPopust.requestFocusInWindow();
            return false;
        }

        TableModelRacuni model = (TableModelRacuni) tblRacuni.getModel();
        SimpleDateFormat sdf = new SimpleDateFormat("dd.MM.yyyy");

        try {
            if (model.vratiBrojRacunaZaDan(sdf.parse(txtDanasnjiDatum.getText())) == cmbOrganizacija.getItemCount()) {
                JOptionPane.showMessageDialog(this, "Kreirani su racuni za sve organizacije za danasni datum!");
                txtPretraga.requestFocusInWindow();
                return false;
            }
            System.out.println("Broj slobodnih mesta pre kreiranja racuna: " + this.getBrojSlobodnohMesta());
            if (this.getBrojSlobodnohMesta() < Integer.parseInt(txtBrojMesta.getText())) {
                JOptionPane.showMessageDialog(rootPane, "Nema dovoljno slobodnih mesta!");
                return false;
            }
        } catch (ParseException ex) {
            Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
        }
        return true;
    }

    private void pretragaOrganizacija() {
        FormPretragaOrganizacije fpo = new FormPretragaOrganizacije(this, true);
        fpo.setLocationRelativeTo(null);
        fpo.setVisible(true);
    }

    public void azurirajOrganizacije() {
        popuniOrganizacije();
    }

    private void dodajNovuOrganizaciju() {
        FormNovaOrganizacija fno = new FormNovaOrganizacija(this, true);
        fno.setLocationRelativeTo(null);
        fno.setVisible(true);
    }

    private void sat() {

        ActionListener actionListener = new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                SimpleDateFormat sdf = new SimpleDateFormat("dd.MM.yyyy. hh:mm:ss");
                lblSat.setText(sdf.format(new Date()));
            }
        };
        timer = new Timer(1000, actionListener);
        timer.setInitialDelay(0);
        timer.start();
    }

    private int getBrojSlMesta(List<Racun> lista) {
        int brojSlMesta = Session.getInstance().getTrenutnoUlogovani().getParkiraliste().getKapacitet();
        for (Racun racun : lista) {
            if (racun.getDatum().equals(new Date())) {
                brojSlMesta--;
            }
        }
        return brojSlMesta;
    }

    public int getBrojSlobodnohMesta() {
        return brojSlobodnohMesta;
    }

    public void setBrojSlobodnohMesta(int brojSlobodnohMesta) {
        this.brojSlobodnohMesta = brojSlobodnohMesta;
    }

    private void pretragaAdministratora() {
        if (Session.getInstance().getTrenutnoUlogovani().isGlavniAdministrator()) {
            FormPretragaAdministratora fpa = new FormPretragaAdministratora(this, true);
            fpa.setLocationRelativeTo(null);
            fpa.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(this, "Nemate pristup ovoj operaciji!");
        }
    }

    private void dodajNovogAdministratora() {
        if (Session.getInstance().getTrenutnoUlogovani().isGlavniAdministrator()) {
            FormNoviAdministrator fna = new FormNoviAdministrator(this, true);
            fna.setLocationRelativeTo(null);
            fna.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(this, "Nemate pristup ovoj operaciji!");
        }
    }

    private void logovanje() {

        int result = JOptionPane.showConfirmDialog(this, "Da li ste sigurni da zelite da "
                + "se odjavite sa sistema?", "Konfirmacija", JOptionPane.YES_NO_OPTION);

        if (result == JOptionPane.NO_OPTION) {
            return;
        }

        if (result == JOptionPane.YES_OPTION) {
            Login login = new Login();
            login.setLocationRelativeTo(null);
            login.setVisible(true);
            dispose();
        }

    }

}
