/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package forms.administrator;

import controller.ClientController;
import domain.Administrator;
import domain.Parkiraliste;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Pattern;
import javax.swing.JDialog;
import javax.swing.JOptionPane;

/**
 *
 * @author Marko Milosevic
 */
public class FormDetaljiAdministratora extends javax.swing.JDialog {

    /**
     * Creates new form FormIzmenaAdministratora
     */
    private Administrator a;

    public FormDetaljiAdministratora(JDialog parent, boolean modal, Administrator a) {
        super(parent, modal);
        initComponents();
        this.a = a;
        lblAdministrator.setText("AdministratorID: " + String.valueOf(a.getAdministratorID()));
        txtIme.setText(a.getIme());
        txtPrezime.setText(a.getPrezime());
        txtUsername.setText(a.getKorisnickoIme());
        txtPassword.setText(a.getLozinka());
        if (a.isGlavniAdministrator()) {
            rbDa.setSelected(true);
        } else {
            rbNe.setSelected(true);
        }
        popuniParkiralista();
        cmbParkiraliste.getModel().setSelectedItem(a.getParkiraliste());
        txtIme.setEnabled(false);
        txtPrezime.setEnabled(false);
        cmbParkiraliste.setEnabled(true);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton2 = new javax.swing.JButton();
        txtPassword2 = new javax.swing.JPasswordField();
        btnOtkazi = new javax.swing.JButton();
        btnIzmeni = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtIme = new javax.swing.JTextField();
        txtPrezime = new javax.swing.JTextField();
        btnObrisi = new javax.swing.JButton();
        lblAdministrator = new javax.swing.JLabel();
        txtPassword = new javax.swing.JPasswordField();
        txtUsername = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        rbDa = new javax.swing.JRadioButton();
        rbNe = new javax.swing.JRadioButton();
        cmbParkiraliste = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();

        jButton2.setText("jButton2");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Detalji - administrator");
        setMinimumSize(new java.awt.Dimension(150, 100));
        setResizable(false);

        btnOtkazi.setText("Otkazi");
        btnOtkazi.setMaximumSize(new java.awt.Dimension(200, 30));
        btnOtkazi.setMinimumSize(new java.awt.Dimension(50, 30));
        btnOtkazi.setPreferredSize(new java.awt.Dimension(88, 30));
        btnOtkazi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOtkaziActionPerformed(evt);
            }
        });
        btnOtkazi.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnOtkaziKeyPressed(evt);
            }
        });

        btnIzmeni.setText("Izmeni");
        btnIzmeni.setMaximumSize(new java.awt.Dimension(200, 30));
        btnIzmeni.setMinimumSize(new java.awt.Dimension(50, 30));
        btnIzmeni.setPreferredSize(new java.awt.Dimension(88, 30));
        btnIzmeni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIzmeniActionPerformed(evt);
            }
        });
        btnIzmeni.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnIzmeniKeyPressed(evt);
            }
        });

        jLabel4.setText("Ime:");
        jLabel4.setMaximumSize(new java.awt.Dimension(200, 14));
        jLabel4.setMinimumSize(new java.awt.Dimension(50, 14));
        jLabel4.setPreferredSize(new java.awt.Dimension(110, 14));

        jLabel5.setText("Prezime:");
        jLabel5.setMaximumSize(new java.awt.Dimension(200, 14));
        jLabel5.setMinimumSize(new java.awt.Dimension(50, 14));
        jLabel5.setPreferredSize(new java.awt.Dimension(110, 14));

        txtIme.setMaximumSize(new java.awt.Dimension(300, 25));
        txtIme.setMinimumSize(new java.awt.Dimension(100, 25));
        txtIme.setPreferredSize(new java.awt.Dimension(200, 25));

        txtPrezime.setMaximumSize(new java.awt.Dimension(300, 25));
        txtPrezime.setMinimumSize(new java.awt.Dimension(100, 25));
        txtPrezime.setPreferredSize(new java.awt.Dimension(200, 25));

        btnObrisi.setText("Obrisi");
        btnObrisi.setMaximumSize(new java.awt.Dimension(200, 30));
        btnObrisi.setMinimumSize(new java.awt.Dimension(50, 30));
        btnObrisi.setPreferredSize(new java.awt.Dimension(88, 30));
        btnObrisi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnObrisiActionPerformed(evt);
            }
        });
        btnObrisi.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnObrisiKeyPressed(evt);
            }
        });

        lblAdministrator.setText("AdministratorID");
        lblAdministrator.setMaximumSize(new java.awt.Dimension(330, 14));
        lblAdministrator.setMinimumSize(new java.awt.Dimension(50, 14));
        lblAdministrator.setPreferredSize(new java.awt.Dimension(314, 14));

        txtPassword.setMaximumSize(new java.awt.Dimension(300, 25));
        txtPassword.setMinimumSize(new java.awt.Dimension(100, 25));
        txtPassword.setPreferredSize(new java.awt.Dimension(200, 25));
        txtPassword.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtPasswordFocusGained(evt);
            }
        });
        txtPassword.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPasswordKeyPressed(evt);
            }
        });

        txtUsername.setMaximumSize(new java.awt.Dimension(300, 25));
        txtUsername.setMinimumSize(new java.awt.Dimension(100, 25));
        txtUsername.setPreferredSize(new java.awt.Dimension(200, 25));
        txtUsername.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtUsernameFocusGained(evt);
            }
        });
        txtUsername.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtUsernameKeyPressed(evt);
            }
        });

        jLabel8.setText("Username:");
        jLabel8.setMaximumSize(new java.awt.Dimension(200, 14));
        jLabel8.setMinimumSize(new java.awt.Dimension(50, 14));
        jLabel8.setPreferredSize(new java.awt.Dimension(110, 14));

        jLabel9.setText("Password:");
        jLabel9.setMaximumSize(new java.awt.Dimension(200, 14));
        jLabel9.setPreferredSize(new java.awt.Dimension(110, 14));

        jLabel1.setText("Glavni administrator:");
        jLabel1.setMaximumSize(new java.awt.Dimension(200, 14));
        jLabel1.setMinimumSize(new java.awt.Dimension(50, 14));
        jLabel1.setPreferredSize(new java.awt.Dimension(110, 14));

        rbDa.setText("Da");
        rbDa.setMaximumSize(new java.awt.Dimension(100, 25));
        rbDa.setMinimumSize(new java.awt.Dimension(30, 25));
        rbDa.setPreferredSize(new java.awt.Dimension(40, 25));
        rbDa.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                rbDaFocusGained(evt);
            }
        });
        rbDa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbDaActionPerformed(evt);
            }
        });
        rbDa.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                rbDaKeyPressed(evt);
            }
        });

        rbNe.setText("Ne");
        rbNe.setMaximumSize(new java.awt.Dimension(100, 25));
        rbNe.setMinimumSize(new java.awt.Dimension(30, 25));
        rbNe.setPreferredSize(new java.awt.Dimension(40, 25));
        rbNe.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                rbNeFocusGained(evt);
            }
        });
        rbNe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbNeActionPerformed(evt);
            }
        });
        rbNe.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                rbNeKeyPressed(evt);
            }
        });

        cmbParkiraliste.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbParkiraliste.setMaximumSize(new java.awt.Dimension(300, 25));
        cmbParkiraliste.setMinimumSize(new java.awt.Dimension(100, 25));
        cmbParkiraliste.setPreferredSize(new java.awt.Dimension(200, 25));
        cmbParkiraliste.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cmbParkiralisteKeyPressed(evt);
            }
        });

        jLabel6.setText("Parkiraliste:");
        jLabel6.setMaximumSize(new java.awt.Dimension(200, 14));
        jLabel6.setMinimumSize(new java.awt.Dimension(50, 14));
        jLabel6.setPreferredSize(new java.awt.Dimension(110, 14));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(33, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(rbDa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(rbNe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtPrezime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtIme, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnOtkazi, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnObrisi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnIzmeni, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(cmbParkiraliste, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(lblAdministrator, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(33, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(33, Short.MAX_VALUE)
                .addComponent(lblAdministrator, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtIme, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPrezime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rbDa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rbNe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbParkiraliste, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnIzmeni, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnOtkazi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnObrisi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(33, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnOtkaziActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOtkaziActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnOtkaziActionPerformed

    private void btnIzmeniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIzmeniActionPerformed
        if (txtUsername.getText().isEmpty() || String.valueOf(txtPassword.getPassword()).isEmpty()) {
            JOptionPane.showMessageDialog(this, "Sva polja moraju biti popunjena!");
            return;
        }

        String username = txtUsername.getText();
        if (!Pattern.matches("^[A-Za-z][A-Za-z0-9_]{3,20}$", username)) {
            JOptionPane.showMessageDialog(rootPane, "Korisnicko ime mora poceti slovom."
                    + "\nMoze sadrzati slova, cifre i donju crtu, bez razmaka."
                    + "\nMoze imati minimalno 3, a maksimalno 20 znakova.");
            return;
        }
        String password = String.copyValueOf(txtPassword.getPassword());
        if (!Pattern.matches("^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{5,}$", password)) {
            JOptionPane.showMessageDialog(rootPane, "Lozinka ne moze poceti znakom interpunkcije, razmakom i drugim specijalnim karakterima."
                    + "\nMora sadrzati bar jedno slovo i bar jednu cifru."
                    + "\nMora sadrzati minimum 5 znakova.");
            return;
        }
        boolean isGlavni = rbDa.isSelected();
        Parkiraliste parkiraliste = (Parkiraliste) cmbParkiraliste.getSelectedItem();

        a.setKorisnickoIme(username);
        a.setLozinka(password);
        a.setGlavniAdministrator(isGlavni);
        a.setParkiraliste(parkiraliste);

        try {
            ClientController.getInstance().editAdministrator(a);
            FormPretragaAdministratora form = (FormPretragaAdministratora) getParent();
            form.refreshTable();
            JOptionPane.showMessageDialog(this, "Uspesno izmenjen administrator.");
            this.dispose();
        } catch (Exception ex) {
            Logger.getLogger(FormDetaljiAdministratora.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_btnIzmeniActionPerformed

    private void btnObrisiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnObrisiActionPerformed

        int result = JOptionPane.showConfirmDialog(this, "Da li ste sigurni da zelite da "
                + "obrisete ovog administratora?", "Konfirmacija", JOptionPane.YES_NO_OPTION);

        if (result == JOptionPane.NO_OPTION) {
            return;
        }

        if (result == JOptionPane.YES_OPTION) {
            try {
                ClientController.getInstance().deleteAdministrator(a);
                FormPretragaAdministratora form = (FormPretragaAdministratora) getParent();
                form.refreshTable();
                JOptionPane.showMessageDialog(this, "Uspesno obrisan administrator!");
                this.dispose();
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "Ne mozete da obrisete ovog administratora "
                        + "jer je unosio racune!");
//                Logger.getLogger(FormDetaljiAdministratora.class.getName()).log(Level.SEVERE, null, ex);
            }
        }


    }//GEN-LAST:event_btnObrisiActionPerformed

    private void rbDaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbDaActionPerformed
        if (rbNe.isSelected()) {
            rbNe.setSelected(false);
        }
        rbDa.setSelected(true);
    }//GEN-LAST:event_rbDaActionPerformed

    private void rbNeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbNeActionPerformed
        if (rbDa.isSelected()) {
            rbDa.setSelected(false);
        }
        rbNe.setSelected(true);
    }//GEN-LAST:event_rbNeActionPerformed

    private void txtUsernameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtUsernameKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txtPassword.requestFocusInWindow();
        }
    }//GEN-LAST:event_txtUsernameKeyPressed

    private void txtPasswordKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPasswordKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            rbNe.requestFocusInWindow();
        }
    }//GEN-LAST:event_txtPasswordKeyPressed

    private void rbNeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_rbNeKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_LEFT) {
            rbDa.requestFocusInWindow();
        }
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            rbNe.setSelected(true);
            rbDa.setSelected(false);
            cmbParkiraliste.requestFocusInWindow();
        }
    }//GEN-LAST:event_rbNeKeyPressed

    private void rbDaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_rbDaKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_RIGHT) {
            rbNe.requestFocusInWindow();
        }
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            rbDa.setSelected(true);
            rbNe.setSelected(false);
            cmbParkiraliste.requestFocusInWindow();
        }
    }//GEN-LAST:event_rbDaKeyPressed

    private void cmbParkiralisteKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cmbParkiralisteKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            btnIzmeni.requestFocusInWindow();
        }
    }//GEN-LAST:event_cmbParkiralisteKeyPressed

    private void txtUsernameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtUsernameFocusGained
        txtUsername.selectAll();
    }//GEN-LAST:event_txtUsernameFocusGained

    private void txtPasswordFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPasswordFocusGained
        txtPassword.selectAll();
    }//GEN-LAST:event_txtPasswordFocusGained

    private void rbDaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_rbDaFocusGained
        rbDa.setSelected(true);
        rbNe.setSelected(false);
    }//GEN-LAST:event_rbDaFocusGained

    private void rbNeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_rbNeFocusGained
        rbNe.setSelected(true);
        rbDa.setSelected(false);
    }//GEN-LAST:event_rbNeFocusGained

    private void btnOtkaziKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnOtkaziKeyPressed
        dispose();
    }//GEN-LAST:event_btnOtkaziKeyPressed

    private void btnObrisiKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnObrisiKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnObrisiKeyPressed

    private void btnIzmeniKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnIzmeniKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnIzmeniKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormDetaljiAdministratora.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormDetaljiAdministratora.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormDetaljiAdministratora.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormDetaljiAdministratora.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnIzmeni;
    private javax.swing.JButton btnObrisi;
    private javax.swing.JButton btnOtkazi;
    private javax.swing.JComboBox cmbParkiraliste;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel lblAdministrator;
    private javax.swing.JRadioButton rbDa;
    private javax.swing.JRadioButton rbNe;
    private javax.swing.JTextField txtIme;
    private javax.swing.JPasswordField txtPassword;
    private javax.swing.JPasswordField txtPassword2;
    private javax.swing.JTextField txtPrezime;
    private javax.swing.JTextField txtUsername;
    // End of variables declaration//GEN-END:variables

    private void popuniParkiralista() {
        try {
            ArrayList<Parkiraliste> parkiralista = ClientController.getInstance().getAllParkiraliste();

            cmbParkiraliste.removeAllItems();

            for (Parkiraliste parkiraliste : parkiralista) {
                cmbParkiraliste.addItem(parkiraliste);
            }

        } catch (Exception ex) {
            Logger.getLogger(FormNoviAdministrator.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

}
